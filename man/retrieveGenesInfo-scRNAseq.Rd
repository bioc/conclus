% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/methods-markers.R
\name{retrieveGenesInfo,scRNAseq-method}
\alias{retrieveGenesInfo,scRNAseq-method}
\alias{retrieveGenesInfo}
\title{retrieveGenesInfo}
\usage{
retrieveGenesInfo(theObject, groupBy="clusters",
                orderGenes="initial", getUniprot=TRUE, cores=2,
                saveInfos=FALSE)
}
\arguments{
\item{theObject}{An Object of class scRNASeq for which the count matrix was
normalized (see ?normaliseCountMatrix), tSNE were calculated (see
?generateTSNECoordinates), dbScan was run (see ?runDBSCAN), cells were
clustered (see ?clusterCellsInternal), as clusters themselves (see
?calculateClustersSimilarity), and ?rankGenes as ?retrieveTopMarkers.}

\item{groupBy}{A column in the input table used for grouping the genes in
the output tables. This option is useful if a table contains genes from
different clusters. Default = "clusters".}

\item{orderGenes}{If "initial" then the order of genes will not be changed.
The other option is "alphabetical". Default = "initial".}

\item{getUniprot}{Boolean, whether to get information from UniProt or not.
Default = TRUE.}

\item{cores}{Maximum number of jobs that CONCLUS can run in parallel.
Default is 1.}

\item{saveInfos}{If TRUE, save the genes infos table in the directory
defined in theObject (?getOutputDirectory) and in the sub-directory
'marker_genes/saveGenesInfo'.}
}
\value{
An object of class scRNASeq with its genesInfos slot updated.
}
\description{
This method retrieve information about the marker genes of each cluster
querying the Ensembl database with biomaRt.
}
\details{
The output dataframe is composed of the following columns:

- uniprot_gn_symbol: Uniprot gene symbol.
- clusters: The cluster to which the gene is associated.
- external_gene_name: The complete gene name.
- go_id: Gene Ontology (GO) identification number.
- mgi_description: If the species is mouse, description of the gene on MGI.
- entrezgene_description: Description of the gene by Entrez database.
- gene_biotype: protein coding gene, lincRNA gene, miRNA gene, unclassified
non-coding RNA gene, or pseudogene.
- chromosome_name: The chromosome on which the gene is located.
- Symbol: Official gene symbol.
- ensembl_gene_id: ID of the gene on the ensembl database.
- mgi_id: If the species is mouse, ID of the gene on the MGI database.
- entrezgene_id: ID of the gene on the entrez database.
- uniprot_gn_id: ID of the gene on the uniprot database.
}
\examples{
## Load the count matrix
countmatrixPath <- system.file("extdata/test_countMatrix.tsv", 
                            package="conclus")
countMatrix <- loadCountMatrix(file=countmatrixPath, header=TRUE, dec=".",
                                sep='\t')

## Load the coldata
coldataPath <- system.file("extdata/test_colData_filtered.tsv", 
                            package="conclus")
columnsMetaData <- loadColdata(file=coldataPath, columnCell="cell_ID",
                                header=TRUE, dec=".", sep='\t')

## Create the initial object
scr <- singlecellRNAseq(experimentName = "Bergiers",
                countMatrix     = countMatrix,
                species         = "mouse",
                outputDirectory = "YourOutputDirectory")

## Normalize and filter the raw counts matrix
scrNorm <- normaliseCountMatrix(scr, coldata = columnsMetaData)

## Compute the tSNE coordinates
scrTsne <- generateTSNECoordinates(scrNorm, cores=2)

## Perform the clustering with dbScan
scrDbscan <- runDBSCAN(scrTsne, cores=2)

## Compute the cell similarity matrix
scrCCI <- clusterCellsInternal(scrDbscan, clusterNumber=10, cores=2)

## Calculate clusters similarity
scrCSM <- calculateClustersSimilarity(scrCCI)

## Ranking genes
scrS4MG <- rankGenes(scrCSM)

## Getting marker genes
scrFinal <- retrieveTopClustersMarkers(scrS4MG, removeDuplicates = FALSE)

## Getting genes info
scrInfos <- retrieveGenesInfo(scrFinal, cores=2)

}
\seealso{
rankGenes retrieveTopClustersMarkers
}
\author{
Ilyess RACHEDI, based on code by Polina PAVLOVICH and Nicolas DESCOSTES.
}
