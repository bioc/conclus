% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/constructors.R
\name{constructors}
\alias{constructors}
\alias{singlecellRNAseq}
\alias{TsneCluster}
\alias{DbscanCluster}
\title{constructors}
\usage{
singlecellRNAseq(experimentName, countMatrix, species, outputDirectory,
tSNElist=list(new("Tsne")), dbscanlist=list(new("Dbscan")),
cellSimMat= matrix(nrow = 1, ncol = 1, dimnames = list("c1", "c1"),
data = 1), clustSimMat=matrix(nrow = 1, ncol = 1, dimnames = list("1", "1"),
data = 1), clustSimOrdered=factor(1), markgenlist=list(data.frame(
Gene = c("gene1"), mean_log10_fdr = c(NA), n_05 = c(NA), score = c(NA))),
clustMark=data.frame(geneName="gene1", clusters=NA), genesInf = data.frame(
uniprot_gn_symbol=c("symbol"), clusters="1", external_gene_name="gene",
go_id="GO1,GO2", mgi_description="description",
entrezgene_description="descr", gene_biotype="gene", chromosome_name="1",
Symbol="symbol", ensembl_gene_id="ENS", mgi_id="MGI", entrezgene_id="1",
uniprot_gn_id="ID"))

TsneCluster(name, pc, perplexity, coordinates)

DbscanCluster(name, epsilon, minPoints, clustering)
}
\arguments{
\item{experimentName}{Character string representing the name of the
experiment.}

\item{countMatrix}{An integer matrix representing the raw count matrix with
reads or unique molecular identifiers (UMIs).}

\item{species}{Character string representing the species of interest.
Currently limited to "mouse" and "human". Other organisms can be added on
demand.}

\item{outputDirectory}{A character string of the path to the root output
folder.}

\item{tSNElist}{List of 'Tsne' objects representing the different tSNE
coordinates generated by CONCLUS.}

\item{dbscanlist}{List of 'Dbscan' objects representing the different
Dbscan clustering generated by CONCLUS.}

\item{cellSimMat}{A numeric Matrix defining how many times two cells have
been associated to the same cluster across the 84 solutions (by default) of
clustering.}

\item{clustSimMat}{A numeric matrix comparing the robustness of the consensus
clusters.}

\item{clustSimOrdered}{A factor representing the clusters ordered by
similarity.}

\item{markgenlist}{List of data.frames. Each data frame contains the ranked
genes of one cluster.}

\item{clustMark}{A data frame containing the top 10 (by default)
marker genes of each clusters.}

\item{genesInf}{A data frame containing informations of the markers
genes for each clusters.}

\item{name}{A 'character' string representing the name of the Dbscan
clustering.}

\item{pc}{A 'numeric' value representing the number of principal components
used by CONCLUS to perfom a PCA before calculating the tSNE.}

\item{perplexity}{A 'numeric' vector. Default: c(30, 40)}

\item{coordinates}{A 'numeric' matrix that contains the coordinates
of one tSNE solution.}

\item{epsilon}{A 'numeric' vector. The epsilon is the distance to consider
two points belonging to the same cluster. Default = c(1.3, 1.4, 1.5)}

\item{minPoints}{A 'numeric' value. The minPoints is the minimum number
of points to construct a cluster.}

\item{clustering}{A 'matrix' that contains the result of one DBSCAN
clustering solution.}
}
\value{
Object of class scRNAseq

Object of class Tsne

Object of class Dbscan
}
\description{
Constructor of the class scRNAseq.
}
\examples{
experimentName <- "Bergiers"
outputDirectory <- "YourOutputDirectory"

## Load the count matrix
countmatrixPath <- system.file("extdata/example_countMatrix.tsv",
                            package="conclus")
countMatrix <- loadDataOrMatrix(file=countmatrixPath, type="countMatrix")

## Load the coldata
coldataPath <- system.file("extdata/example_colData.tsv",
                            package="conclus")
columnsMetaData <- loadDataOrMatrix(file=coldataPath, type="coldata",
columnID="cell_ID")

## Create the initial object
scr <- singlecellRNAseq(experimentName = experimentName,
                countMatrix     = countMatrix,
                species         = "mouse",
                outputDirectory = outputDirectory)

mat <- matrix(seq_len(20), ncol=2)
colnames(mat) <- c("X", "Y")
TsneCluster(name = "test", pc = 30, perplexity = 4,
coordinates = mat)

DbscanCluster("test", 0.5, 2, matrix(1:10))

}
\seealso{
scRNAseq-class

Tsne-class

Dbscan-class
}
