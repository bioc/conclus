% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/methods-markers.R
\name{retrieveTopClustersMarkers,scRNAseq-method}
\alias{retrieveTopClustersMarkers,scRNAseq-method}
\alias{retrieveTopClustersMarkers}
\title{retrieveTopClustersMarkers}
\usage{
retrieveTopClustersMarkers(theObject, nTop=10, removeDuplicates = TRUE,
                writeMarkerGenes = FALSE)
}
\arguments{
\item{theObject}{An Object of class scRNASeq for which rankGenes was
run. See ?rankGenes.}

\item{nTop}{Number of marker genes to retrieve per cluster. Default=10.}

\item{removeDuplicates}{If TRUE, duplicated markers are removed from the
lists. Default=TRUE.}

\item{writeMarkerGenes}{If TRUE, writes one list per cluster in the output
folder defined in theObject, and in the sub-directory
marker_genes/markers_lists. Default=FALSE.}
}
\value{
Output the list of markers to marker_genes/markers_lists if writeMarkersGenes
is TRUE and return a scRNASeq object with its clustersMarkers slot updated.
}
\description{
This function retrieves the top N marker genes for each cluster.
}
\examples{
## Load the count matrix
countmatrixPath <- system.file("extdata/test_countMatrix.tsv", 
                            package="conclus")
countMatrix <- loadDataOrMatrix(file=countmatrixPath, type="countMatrix")

## Load the coldata
coldataPath <- system.file("extdata/test_colData_filtered.tsv", 
                            package="conclus")
columnsMetaData <- loadDataOrMatrix(file=coldataPath, type="coldata", 
columnID="cell_ID")

## Create the initial object
scr <- singlecellRNAseq(experimentName = "Bergiers",
                countMatrix     = countMatrix,
                species         = "mouse",
                outputDirectory = "YourOutputDirectory")

## Normalize and filter the raw counts matrix
scrNorm <- normaliseCountMatrix(scr, coldata = columnsMetaData)

## Compute the tSNE coordinates
scrTsne <- generateTSNECoordinates(scrNorm, cores=2)

## Perform the clustering with dbScan
scrDbscan <- runDBSCAN(scrTsne, cores=2)

## Compute the cell similarity matrix
scrCCI <- clusterCellsInternal(scrDbscan, clusterNumber=10, cores=2)

## Calculate clusters similarity
scrCSM <- calculateClustersSimilarity(scrCCI)

## Ranking genes
scrS4MG <- rankGenes(scrCSM)

## Retrieve the top 10 markers per cluster
scrFinal <- retrieveTopClustersMarkers(scrS4MG)

}
\seealso{
retrieveGenesInfo
}
\author{
Ilyess RACHEDI, based on code by Polina PAVLOVICH and Nicolas DESCOSTES.
}
