% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/methods-plot.R
\name{plotCellHeatmap,scRNAseq-method}
\alias{plotCellHeatmap,scRNAseq-method}
\alias{plotCellHeatmap}
\title{plotCellHeatmap}
\usage{
plotCellHeatmap(theObject, fileName = NA, meanCentered=TRUE, 
			colorPalette="default", statePalette="default", 
			clusteringMethod="ward.D2", orderClusters=FALSE, orderGenes=FALSE, 
			returnPlot=FALSE, savePlot=FALSE, width=10, height=8.5, 
			onefile=FALSE, clusterCols=FALSE, showColnames=FALSE, fontsize=7.5, 
			fontsizeRow=8, plotPDF=TRUE, widthPNG=800, heightPNG=750, 
         silentPlot)
}
\arguments{
\item{theObject}{A scRNAseq object with the cluster similarity matrix 
obtained with ?calculateClustersSimilarity method and the top markers 
obtained with ?retrieveTopClustersMarkers.}

\item{fileName}{Name of the output file to which the heatmap is saved.}

\item{meanCentered}{Boolean indicating if mean centering should be applied 
to the expression matrix. Default = TRUE.}

\item{colorPalette}{A vector of colors for clusters. Default = "default",
See details.}

\item{statePalette}{A vector of colors for states or conditions. See details.}

\item{clusteringMethod}{Clustering method passed to hclust() function. 
See ?hclust for a list of method. Default = "ward.D2".}

\item{orderClusters}{If True, clusters in the similarity matrix of cells will
be ordered by name. Default = FALSE.}

\item{orderGenes}{Boolean, should the heatmap be structured by gene.
Default = FALSE.}

\item{returnPlot}{If TRUE returns a pheatmap object. Default=FALSE.}

\item{savePlot}{If TRUE and plotPDF=TRUE, save the heatmap in pdf format.
The heatmap is saved in the output directory defined in theObject 
(?getOutputDirectory) and in the sub-directory 'pictures'.}

\item{width}{Width of the plot in the pdf file. See ?pdf for more details.
Default = 10.}

\item{height}{Height of the plot in the pdf file. See ?pdf for more details.
Default = 8.5.}

\item{onefile}{Logical: if TRUE allow multiple figures in one file. If FALSE,
generate a file with name containing the page number for each page.
Defaults to FALSE.}

\item{clusterCols}{If TRUE, the columns representing the clusters are also
taken into account in the hierarchical clustering. Default=FALSE.}

\item{showColnames}{Shoud the names of the columns (clusters) be indicated on
the heatmap. Default = FALSE.}

\item{fontsize}{base fontsize for the plot. Default = 7.5.}

\item{fontsizeRow}{fontsize for rownames. Default = 8.}

\item{plotPDF}{If TRUE, the heatmap is saved in pdf format and in png 
otherwise. Default = TRUE.}

\item{widthPNG}{Width of the png. See ?png for details. Default=800.}

\item{heightPNG}{Height of the png. See ?png for details. Default=750.}

\item{silentPlot}{If TRUE, does not plot the pheatmap. Default=FALSE.}
}
\value{
A pheatmap object of the heatmap if returnPlot is TRUE.
}
\description{
This function plots heatmap with marker genes on rows and
 clustered cells on columns.
}
\details{
colorPalette/statePalette -- A vector of colors for clusters/states or 
'default' value. If 'default' is selected, the number of clusters is limited 
to 16. If an error message is thrown, re-run the function with your own color
 vector.
}
\examples{
experimentName <- "Bergiers"
countMatrix <- as.matrix(read.delim(file.path(
"tests/testthat/test_data/test_countMatrix.tsv")))
outputDirectory <- "./"
columnsMetaData <- read.delim(
file.path("extdata/Bergiers_colData_filtered.tsv"))

## Create the initial object
scr <- scRNAseq(experimentName = experimentName, 
                countMatrix     = countMatrix, 
                species         = "mouse",
                outputDirectory = outputDirectory)

## Normalize and filter the raw counts matrix
scrNorm <- normaliseCountMatrix(scr, coldata = columnsMetaData)

## Compute the tSNE coordinates
scrTsne <- generateTSNECoordinates(scrNorm, cores=5)

## Perform the clustering with dbScan
scrDbscan <- runDBSCAN(scrTsne, cores=5)

## Compute the cell similarity matrix
scrCCI <- clusterCellsInternal(scrDbscan, clusterNumber=10, cores=4)

## Calculate clusters similarity
scrCSM <- calculateClustersSimilarity(scrCCI)

## Ranking genes
scrS4MG <- rankGenes(scrCSM)

## Retrieve the top 10 markers per cluster
scrFinal <- retrieveTopClustersMarkers(scrS4MG)

## Plot the heatmap with marker genes
plotCellHeatmap(scrFinal)

}
\seealso{
calculateClustersSimilarity  plotClusteredTSNE plotCellSimilarity
plotGeneExpression plotClustersSimilarity
}
\author{
Ilyess RACHEDI, based on code by Polina PAVLOVICH and Nicolas DESCOSTES.
}
